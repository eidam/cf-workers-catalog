diff --git a/node_modules/gatsby-source-github-api/gatsby-node.js b/node_modules/gatsby-source-github-api/gatsby-node.js
index 108ed0d..e4c8507 100644
--- a/node_modules/gatsby-source-github-api/gatsby-node.js
+++ b/node_modules/gatsby-source-github-api/gatsby-node.js
@@ -1,40 +1,49 @@
-const { fetchFromGithub } = require("./src/helper");
-const crypto = require("crypto");
-const uuid = require("uuid/v1");
+const { fetchFromGithub } = require("./src/helper")
+const crypto = require("crypto")
+const uuid = require("uuid/v1")
 
 exports.sourceNodes = (
   { boundActionCreators },
   { token, variables, graphQLQuery, url }
 ) => {
-  const { createNode } = boundActionCreators;
-  return new Promise((resolve, reject) => {
+  const { createNode } = boundActionCreators
+  return new Promise(async (resolve, reject) => {
     // we need a token to use this plugin
     if (token === undefined) {
-      reject("token is undefined");
-      return;
+      reject("token is undefined")
+      return
     }
-    fetchFromGithub(url, token, graphQLQuery, variables).then(result => {
-      createNode({
-        data: result.data,
-        id: result.id || uuid(),
-        // see https://github.com/ldd/gatsby-source-github-api/issues/19
-        // provide the raw result to see errors, or other information
-        rawResult: result,
-        parent: null,
-        children: [],
-        internal: {
-          type: "GithubData",
-          contentDigest: crypto
-            .createHash(`md5`)
-            .update(JSON.stringify(result))
-            .digest(`hex`),
-          // see https://github.com/ldd/gatsby-source-github-api/issues/10
-          // our node should have an 'application/json' MIME type, but we wish
-          // transformers to ignore it, so we set its mediaType to text/plain for now
-          mediaType: "text/plain"
-        }
-      });
-      resolve();
-    });
-  });
-};
+
+    if (!Array.isArray(variables)) {
+      variables = [variables]
+    }
+
+    console.log("variableeeees", variables)
+
+    for (variable of variables) {
+      await fetchFromGithub(url, token, graphQLQuery, variable).then(result => {
+        createNode({
+          data: result.data,
+          id: result.id || uuid(),
+          // see https://github.com/ldd/gatsby-source-github-api/issues/19
+          // provide the raw result to see errors, or other information
+          rawResult: result,
+          parent: null,
+          children: [],
+          internal: {
+            type: "GithubData",
+            contentDigest: crypto
+              .createHash(`md5`)
+              .update(JSON.stringify(result))
+              .digest(`hex`),
+            // see https://github.com/ldd/gatsby-source-github-api/issues/10
+            // our node should have an 'application/json' MIME type, but we wish
+            // transformers to ignore it, so we set its mediaType to text/plain for now
+            mediaType: "text/plain"
+          }
+        })
+      })
+    }
+    resolve()
+  })
+}
